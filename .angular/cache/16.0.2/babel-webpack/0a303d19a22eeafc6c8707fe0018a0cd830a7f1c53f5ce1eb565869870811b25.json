{"ast":null,"code":"import { map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProduitService {\n  constructor(http) {\n    this.http = http;\n    this.produitsList = [];\n  }\n  getAllProduits() {\n    return this.http.get('https://diane.amorce.org/api/produits');\n  }\n  getPhotosData(photoUrls) {\n    return photoUrls.map(url => this.http.get(url));\n  }\n  getProduitByCategorie(idCategorie) {\n    return this.getAllProduits().pipe(map(produits => produits.filter(produit => produit.categorie === idCategorie)));\n  }\n}\nProduitService.ɵfac = function ProduitService_Factory(t) {\n  return new (t || ProduitService)(i0.ɵɵinject(i1.HttpClient));\n};\nProduitService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProduitService,\n  factory: ProduitService.ɵfac,\n  providedIn: 'root'\n});\nexport { ProduitService };","map":{"version":3,"names":["map","ProduitService","constructor","http","produitsList","getAllProduits","get","getPhotosData","photoUrls","url","getProduitByCategorie","idCategorie","pipe","produits","filter","produit","categorie","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/diane/Documents/PROJET/WitchyDesktop/src/app/services/produits.services.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable, forkJoin, map } from \"rxjs\";\nimport { Produits } from \"../models/produits.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ProduitService {\n\n    constructor( private http: HttpClient){\n\n    }\n\n    produitsList: Produits[] = [\n    ];\n\n    getAllProduits():Observable<Produits[]> {\n        return this.http.get<Produits[]>('https://diane.amorce.org/api/produits')\n    }\n    \n    getPhotosData(photoUrls: string[]): Observable<any>[] {\n        return photoUrls.map(url => this.http.get(url));\n      }\n    \n      getProduitByCategorie(idCategorie: number): Observable<Produits[]> {\n        return this.getAllProduits().pipe(\n          map(produits => produits.filter(produit => produit.categorie === idCategorie))\n        );\n      }\n\n}"],"mappings":"AAEA,SAA+BA,GAAG,QAAQ,MAAM;;;AAGhD,MAIaC,cAAc;EAEvBC,YAAqBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAIzB,KAAAC,YAAY,GAAe,EAC1B;EAHD;EAKAC,cAAcA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,uCAAuC,CAAC;EAC7E;EAEAC,aAAaA,CAACC,SAAmB;IAC7B,OAAOA,SAAS,CAACR,GAAG,CAACS,GAAG,IAAI,IAAI,CAACN,IAAI,CAACG,GAAG,CAACG,GAAG,CAAC,CAAC;EACjD;EAEAC,qBAAqBA,CAACC,WAAmB;IACvC,OAAO,IAAI,CAACN,cAAc,EAAE,CAACO,IAAI,CAC/BZ,GAAG,CAACa,QAAQ,IAAIA,QAAQ,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,SAAS,KAAKL,WAAW,CAAC,CAAC,CAC/E;EACH;;AArBOV,cAAc,C;mBAAdA,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdnB,cAAc,C;SAAdA,cAAc;EAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;EAAAC,UAAA,EAHX;AAAM;SAGTtB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}