{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass CategorieService {\n  constructor() {\n    this.categoriesList = [{\n      id: 1,\n      parentId: null,\n      nomination: 'Women',\n      slug: 'women'\n    }, {\n      id: 2,\n      parentId: null,\n      nomination: 'Men',\n      slug: 'men'\n    }, {\n      id: 3,\n      parentId: null,\n      nomination: 'Shoes',\n      slug: 'shoes'\n    }];\n  }\n  getAllCategories() {\n    return this.categoriesList;\n  }\n  getCategorieById(id) {\n    const categorie = this.categoriesList.find(categorie => categorie.id === id);\n    if (!categorie) {\n      throw new Error('categorie not found');\n    }\n  }\n}\nCategorieService.ɵfac = function CategorieService_Factory(t) {\n  return new (t || CategorieService)();\n};\nCategorieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategorieService,\n  factory: CategorieService.ɵfac,\n  providedIn: 'root'\n});\nexport { CategorieService };","map":{"version":3,"names":["CategorieService","constructor","categoriesList","id","parentId","nomination","slug","getAllCategories","getCategorieById","categorie","find","Error","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Maddox\\Documents\\TRAVAIL\\AFPA_CDA_2023\\ANGULAR\\WitchyDesktop\\src\\app\\services\\categories.services.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Categories } from \"../models/categories.model\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class CategorieService {\r\n\r\n    categoriesList: Categories[] = [\r\n        {\r\n            id: 1,\r\n            parentId: null,\r\n            nomination: 'Women',\r\n            slug: 'women'\r\n        }, {\r\n            id: 2,\r\n            parentId: null,\r\n            nomination: 'Men',\r\n            slug: 'men'\r\n        }, {\r\n            id: 3,\r\n            parentId: null,\r\n            nomination: 'Shoes',\r\n            slug: 'shoes'\r\n        }\r\n\r\n    ];\r\n\r\n    getAllCategories(): Categories[] {\r\n        return this.categoriesList\r\n    }\r\n\r\n    getCategorieById(id: number): void {\r\n        const categorie = this.categoriesList.find(categorie => categorie.id === id);\r\n        if (!categorie) {\r\n            throw new Error('categorie not found');\r\n        }\r\n\r\n    }\r\n}"],"mappings":";AAGA,MAIaA,gBAAgB;EAJ7BC,YAAA;IAMI,KAAAC,cAAc,GAAiB,CAC3B;MACIC,EAAE,EAAE,CAAC;MACLC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,OAAO;MACnBC,IAAI,EAAE;KACT,EAAE;MACCH,EAAE,EAAE,CAAC;MACLC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,KAAK;MACjBC,IAAI,EAAE;KACT,EAAE;MACCH,EAAE,EAAE,CAAC;MACLC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,OAAO;MACnBC,IAAI,EAAE;KACT,CAEJ;;EAEDC,gBAAgBA,CAAA;IACZ,OAAO,IAAI,CAACL,cAAc;EAC9B;EAEAM,gBAAgBA,CAACL,EAAU;IACvB,MAAMM,SAAS,GAAG,IAAI,CAACP,cAAc,CAACQ,IAAI,CAACD,SAAS,IAAIA,SAAS,CAACN,EAAE,KAAKA,EAAE,CAAC;IAC5E,IAAI,CAACM,SAAS,EAAE;MACZ,MAAM,IAAIE,KAAK,CAAC,qBAAqB,CAAC;;EAG9C;;AAhCSX,gBAAgB,C;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB,C;SAAhBA,gBAAgB;EAAAY,OAAA,EAAhBZ,gBAAgB,CAAAa,IAAA;EAAAC,UAAA,EAHb;AAAM;SAGTd,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}