{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProduitService {\n  constructor(http) {\n    this.http = http;\n    this.produitsList = [];\n  }\n  getAllProduits() {\n    return this.http.get('https://diane.amorce.org/api/produits');\n  }\n  getAllPhotoByRef(ref) {\n    const url = `https://127.0.0.1:8000/api/photos?RefProduit=${ref}`;\n    return this.http.get(url);\n  }\n  getProduitById(id) {\n    const url = `https://127.0.0.1:8000/api/produits?id=${id}`;\n    return this.http.get(url);\n  }\n}\nProduitService.ɵfac = function ProduitService_Factory(t) {\n  return new (t || ProduitService)(i0.ɵɵinject(i1.HttpClient));\n};\nProduitService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProduitService,\n  factory: ProduitService.ɵfac,\n  providedIn: 'root'\n});\nexport { ProduitService };","map":{"version":3,"names":["ProduitService","constructor","http","produitsList","getAllProduits","get","getAllPhotoByRef","ref","url","getProduitById","id","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Maddox\\Documents\\TRAVAIL\\AFPA_CDA_2023\\ANGULAR\\WitchyDesktop\\src\\app\\services\\produits.services.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable, forkJoin, map } from \"rxjs\";\r\nimport { Produits } from \"../models/produits.model\";\r\nimport { Photos } from \"../models/photos.model\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ProduitService {\r\n\r\n    constructor( private http: HttpClient){\r\n\r\n    }\r\n\r\n    produitsList: Produits[] = [\r\n    ];\r\n\r\n    getAllProduits():Observable<Produits[]> {\r\n        return this.http.get<Produits[]>('https://diane.amorce.org/api/produits')\r\n    }\r\n\r\n    getAllPhotoByRef(ref: number): Observable<Photos[]>{\r\n        const url = `https://127.0.0.1:8000/api/photos?RefProduit=${ref}`;\r\n        return this.http.get<Photos[]>(url);\r\n    }\r\n\r\n    getProduitById(id:number): Observable<Produits[]>{\r\n        const url= `https://127.0.0.1:8000/api/produits?id=${id}`;\r\n        return this.http.get<Produits[]>(url);\r\n    }\r\n\r\n} "],"mappings":";;AAMA,MAIaA,cAAc;EAEvBC,YAAqBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAIzB,KAAAC,YAAY,GAAe,EAC1B;EAHD;EAKAC,cAAcA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,uCAAuC,CAAC;EAC7E;EAEAC,gBAAgBA,CAACC,GAAW;IACxB,MAAMC,GAAG,GAAG,gDAAgDD,GAAG,EAAE;IACjE,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAWG,GAAG,CAAC;EACvC;EAEAC,cAAcA,CAACC,EAAS;IACpB,MAAMF,GAAG,GAAE,0CAA0CE,EAAE,EAAE;IACzD,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAaG,GAAG,CAAC;EACzC;;AArBSR,cAAc,C;mBAAdA,cAAc,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdd,cAAc,C;SAAdA,cAAc;EAAAe,OAAA,EAAdf,cAAc,CAAAgB,IAAA;EAAAC,UAAA,EAHX;AAAM;SAGTjB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}