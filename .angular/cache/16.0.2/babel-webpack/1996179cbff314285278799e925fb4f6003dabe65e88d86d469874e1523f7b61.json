{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { map } from 'rxjs';\nlet NewProduitComponent = class NewProduitComponent {\n  constructor(produitService, route, categoryService, formBuilder) {\n    this.produitService = produitService;\n    this.route = route;\n    this.categoryService = categoryService;\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.createForm = this.formBuilder.group({\n      ShortLibel: [null],\n      LongLibel: [null],\n      prxHt: [null],\n      url: [null]\n    });\n    // Récupérez l'ID de la catégorie depuis le service\n    this.currentCategoryId = this.categoryService.getCurrentCategoryId();\n    this.produitPreview$ = this.createForm.valueChanges.pipe(map(formvalue => ({\n      ...formvalue,\n      slug: slugify(formvalue.ShortLibel),\n      categorie: this.currentCategoryId\n    })));\n  }\n  onSubmitForm() {\n    console.log(this.createForm.value);\n  }\n};\nNewProduitComponent = __decorate([Component({\n  selector: 'app-new-produit',\n  templateUrl: './new-produit.component.html',\n  styleUrls: ['./new-produit.component.scss']\n})], NewProduitComponent);\nexport { NewProduitComponent };\nfunction slugify(text) {\n  // Supprimer les caractères spéciaux et convertir en minuscules\n  const normalizedText = text.replace(/[^a-zA-Z0-9\\s]/g, \"\").toLowerCase();\n  // Remplacer les espaces par des tirets (\"-\")\n  const slug = normalizedText.replace(/\\s+/g, \"-\");\n  return slug;\n}","map":{"version":3,"names":["Component","map","NewProduitComponent","constructor","produitService","route","categoryService","formBuilder","ngOnInit","createForm","group","ShortLibel","LongLibel","prxHt","url","currentCategoryId","getCurrentCategoryId","produitPreview$","valueChanges","pipe","formvalue","slug","slugify","categorie","onSubmitForm","console","log","value","__decorate","selector","templateUrl","styleUrls","text","normalizedText","replace","toLowerCase"],"sources":["C:\\Users\\Maddox\\Documents\\TRAVAIL\\AFPA_CDA_2023\\ANGULAR\\WitchyDesktop\\src\\app\\new-produit\\new-produit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ProduitService } from '../services/produits.services';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Observable, map } from 'rxjs';\r\nimport { Produits } from '../models/produits.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CategorieService } from '../services/categories.services';\r\n\r\n@Component({\r\n  selector: 'app-new-produit',\r\n  templateUrl: './new-produit.component.html',\r\n  styleUrls: ['./new-produit.component.scss']\r\n})\r\nexport class NewProduitComponent implements OnInit{\r\n\r\n  createForm!:FormGroup;\r\n  produitPreview$!: Observable<Produits>;\r\n  currentCategoryId!: number | null;\r\n\r\n  constructor(private produitService: ProduitService,\r\n    private route : ActivatedRoute,\r\n    private categoryService: CategorieService,\r\n    private formBuilder: FormBuilder) {}\r\n\r\n    ngOnInit(): void {\r\n      this.createForm = this.formBuilder.group({\r\n        ShortLibel: [null],\r\n         LongLibel: [null],\r\n         prxHt: [null],\r\n         url: [null]\r\n      });\r\n\r\n    // Récupérez l'ID de la catégorie depuis le service\r\n    this.currentCategoryId = this.categoryService.getCurrentCategoryId();\r\n    \r\n\r\n    this.produitPreview$ = this.createForm.valueChanges.pipe(\r\n        map(formvalue => ({ \r\n          ...formvalue,\r\n          slug: slugify(formvalue.ShortLibel),\r\n          categorie: this.currentCategoryId,\r\n        }))\r\n      )\r\n    \r\n  }\r\n  onSubmitForm(): void {\r\n    console.log(this.createForm.value);\r\n}\r\n}\r\n\r\nfunction slugify(text: string): string {\r\n  // Supprimer les caractères spéciaux et convertir en minuscules\r\n  const normalizedText = text.replace(/[^a-zA-Z0-9\\s]/g, \"\").toLowerCase();\r\n  \r\n  // Remplacer les espaces par des tirets (\"-\")\r\n  const slug = normalizedText.replace(/\\s+/g, \"-\");\r\n  \r\n  return slug;\r\n}\r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAAqBC,GAAG,QAAQ,MAAM;AAUtC,IAAaC,mBAAmB,GAAhC,MAAaA,mBAAmB;EAM9BC,YAAoBC,cAA8B,EACxCC,KAAsB,EACtBC,eAAiC,EACjCC,WAAwB;IAHd,KAAAH,cAAc,GAAdA,cAAc;IACxB,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,WAAW,GAAXA,WAAW;EAAgB;EAEnCC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACvCC,UAAU,EAAE,CAAC,IAAI,CAAC;MACjBC,SAAS,EAAE,CAAC,IAAI,CAAC;MACjBC,KAAK,EAAE,CAAC,IAAI,CAAC;MACbC,GAAG,EAAE,CAAC,IAAI;KACZ,CAAC;IAEJ;IACA,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACT,eAAe,CAACU,oBAAoB,EAAE;IAGpE,IAAI,CAACC,eAAe,GAAG,IAAI,CAACR,UAAU,CAACS,YAAY,CAACC,IAAI,CACpDlB,GAAG,CAACmB,SAAS,KAAK;MAChB,GAAGA,SAAS;MACZC,IAAI,EAAEC,OAAO,CAACF,SAAS,CAACT,UAAU,CAAC;MACnCY,SAAS,EAAE,IAAI,CAACR;KACjB,CAAC,CAAC,CACJ;EAEL;EACAS,YAAYA,CAAA;IACVC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,UAAU,CAACkB,KAAK,CAAC;EACtC;CACC;AAnCYzB,mBAAmB,GAAA0B,UAAA,EAL/B5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACW7B,mBAAmB,CAmC/B;SAnCYA,mBAAmB;AAqChC,SAASoB,OAAOA,CAACU,IAAY;EAC3B;EACA,MAAMC,cAAc,GAAGD,IAAI,CAACE,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAACC,WAAW,EAAE;EAExE;EACA,MAAMd,IAAI,GAAGY,cAAc,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;EAEhD,OAAOb,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}