{"ast":null,"code":"import { map, switchMap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProduitService {\n  constructor(http) {\n    this.http = http;\n    this.produitsList = [];\n  }\n  getAllProduits() {\n    return this.http.get(\"https://diane.amorce.org/api/produits\");\n  }\n  getAllPhotoByRef(ref) {\n    const url = `https://diane.amorce.org/api/photos?RefProduit=${ref}`;\n    return this.http.get(url);\n  }\n  getProduitById(id) {\n    const url = `https://diane.amorce.org/api/produits?id=${id}`;\n    return this.http.get(url);\n  }\n  createProduit(formvalue, currentCategoryId) {\n    return this.getAllProduits().pipe(map(produits => [...produits].sort((a, b) => a.id - b.id)), map(sortedproduits => sortedproduits[sortedproduits.length - 1]), map(previousproduit => ({\n      ...formvalue,\n      slug: this.slugify(formvalue.ShortLibel),\n      categorie: `/api/categories/${currentCategoryId?.toString()}`\n    })), switchMap(newproduit => this.http.post('https://diane.amorce.org/api/produits', newproduit)));\n  }\n  addPhoto(formvalue, Refprod) {\n    return this.getAllPhotoByRef(Refprod).pipe(map(photos => [...photos].sort((a, b) => a.id - b.id)), map(sortedPhotos => sortedPhotos[sortedPhotos.length - 1]), map(previousproduit => ({\n      ...formvalue\n      // categorie: `/api/categories/${currentCategoryId?.toString()}`,\n    })), switchMap(newPhoto => this.http.post('https://diane.amorce.org/api/photos', newproduit)));\n  }\n  slugify(text) {\n    const normalizedText = text.replace(/[^a-zA-Z0-9\\s]/g, \"\").toLowerCase();\n    const slug = normalizedText.replace(/\\s+/g, \"-\");\n    return slug;\n  }\n}\nProduitService.ɵfac = function ProduitService_Factory(t) {\n  return new (t || ProduitService)(i0.ɵɵinject(i1.HttpClient));\n};\nProduitService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProduitService,\n  factory: ProduitService.ɵfac,\n  providedIn: \"root\"\n});\nexport { ProduitService };","map":{"version":3,"names":["map","switchMap","ProduitService","constructor","http","produitsList","getAllProduits","get","getAllPhotoByRef","ref","url","getProduitById","id","createProduit","formvalue","currentCategoryId","pipe","produits","sort","a","b","sortedproduits","length","previousproduit","slug","slugify","ShortLibel","categorie","toString","newproduit","post","addPhoto","Refprod","photos","sortedPhotos","newPhoto","text","normalizedText","replace","toLowerCase","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Maddox\\Documents\\TRAVAIL\\AFPA_CDA_2023\\ANGULAR\\WitchyDesktop\\src\\app\\services\\produits.services.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable, forkJoin, map, of, switchMap } from \"rxjs\";\r\nimport { Produits } from \"../models/produits.model\";\r\nimport { Photos } from \"../models/photos.model\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ProduitService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  produitsList: Produits[] = [];\r\n\r\n  getAllProduits(): Observable<Produits[]> {\r\n    return this.http.get<Produits[]>(\"https://diane.amorce.org/api/produits\");\r\n  }\r\n\r\n  getAllPhotoByRef(ref: number): Observable<Photos[]> {\r\n    const url = `https://diane.amorce.org/api/photos?RefProduit=${ref}`;\r\n    return this.http.get<Photos[]>(url);\r\n  }\r\n\r\n  getProduitById(id: number): Observable<Produits[]> {\r\n    const url = `https://diane.amorce.org/api/produits?id=${id}`;\r\n    return this.http.get<Produits[]>(url);\r\n  }\r\n  \r\n\r\n  public createProduit( formvalue: {ShortLibel: string, LongLibel: string, prxHt: number,  }, currentCategoryId: number | null): Observable<Produits> {\r\n   \r\n    return this.getAllProduits().pipe(\r\n        map(produits => [...produits].sort((a, b)=>a.id - b.id)),\r\n        map(sortedproduits => sortedproduits[sortedproduits.length - 1]),\r\n        map(previousproduit => ({\r\n            ...formvalue,\r\n            slug: this.slugify(formvalue.ShortLibel),\r\n            categorie: `/api/categories/${currentCategoryId?.toString()}`,\r\n        })),\r\n        switchMap(newproduit => this.http.post<Produits>('https://diane.amorce.org/api/produits', newproduit)),\r\n    )\r\n  }\r\n\r\n  public addPhoto(formvalue : {src : string }, Refprod : number) : Observable<Photos> {\r\n      return this.getAllPhotoByRef(Refprod).pipe(\r\n      map(photos => [...photos].sort((a, b)=>a.id - b.id)),\r\n        map(sortedPhotos => sortedPhotos[sortedPhotos.length - 1]),\r\n        map(previousproduit => ({\r\n          ...formvalue,\r\n         // categorie: `/api/categories/${currentCategoryId?.toString()}`,\r\n      })),\r\n      switchMap(newPhoto => this.http.post<Photos>('https://diane.amorce.org/api/photos', newproduit)),\r\n    )\r\n  }\r\n\r\n  slugify(text: string): string {\r\n    const normalizedText = text.replace(/[^a-zA-Z0-9\\s]/g, \"\").toLowerCase();\r\n    const slug = normalizedText.replace(/\\s+/g, \"-\");\r\n\r\n    return slug;\r\n  }\r\n\r\n\r\n}\r\n"],"mappings":"AAEA,SAA+BA,GAAG,EAAMC,SAAS,QAAQ,MAAM;;;AAK/D,MAGaC,cAAc;EACzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,YAAY,GAAe,EAAE;EAFU;EAIvCC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,uCAAuC,CAAC;EAC3E;EAEAC,gBAAgBA,CAACC,GAAW;IAC1B,MAAMC,GAAG,GAAG,kDAAkDD,GAAG,EAAE;IACnE,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAWG,GAAG,CAAC;EACrC;EAEAC,cAAcA,CAACC,EAAU;IACvB,MAAMF,GAAG,GAAG,4CAA4CE,EAAE,EAAE;IAC5D,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAaG,GAAG,CAAC;EACvC;EAGOG,aAAaA,CAAEC,SAAoE,EAAEC,iBAAgC;IAE1H,OAAO,IAAI,CAACT,cAAc,EAAE,CAACU,IAAI,CAC7BhB,GAAG,CAACiB,QAAQ,IAAI,CAAC,GAAGA,QAAQ,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAGD,CAAC,CAACP,EAAE,GAAGQ,CAAC,CAACR,EAAE,CAAC,CAAC,EACxDZ,GAAG,CAACqB,cAAc,IAAIA,cAAc,CAACA,cAAc,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC,EAChEtB,GAAG,CAACuB,eAAe,KAAK;MACpB,GAAGT,SAAS;MACZU,IAAI,EAAE,IAAI,CAACC,OAAO,CAACX,SAAS,CAACY,UAAU,CAAC;MACxCC,SAAS,EAAE,mBAAmBZ,iBAAiB,EAAEa,QAAQ,EAAE;KAC9D,CAAC,CAAC,EACH3B,SAAS,CAAC4B,UAAU,IAAI,IAAI,CAACzB,IAAI,CAAC0B,IAAI,CAAW,uCAAuC,EAAED,UAAU,CAAC,CAAC,CACzG;EACH;EAEOE,QAAQA,CAACjB,SAA2B,EAAEkB,OAAgB;IACzD,OAAO,IAAI,CAACxB,gBAAgB,CAACwB,OAAO,CAAC,CAAChB,IAAI,CAC1ChB,GAAG,CAACiC,MAAM,IAAI,CAAC,GAAGA,MAAM,CAAC,CAACf,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAGD,CAAC,CAACP,EAAE,GAAGQ,CAAC,CAACR,EAAE,CAAC,CAAC,EAClDZ,GAAG,CAACkC,YAAY,IAAIA,YAAY,CAACA,YAAY,CAACZ,MAAM,GAAG,CAAC,CAAC,CAAC,EAC1DtB,GAAG,CAACuB,eAAe,KAAK;MACtB,GAAGT;MACJ;KACF,CAAC,CAAC,EACHb,SAAS,CAACkC,QAAQ,IAAI,IAAI,CAAC/B,IAAI,CAAC0B,IAAI,CAAS,qCAAqC,EAAED,UAAU,CAAC,CAAC,CACjG;EACH;EAEAJ,OAAOA,CAACW,IAAY;IAClB,MAAMC,cAAc,GAAGD,IAAI,CAACE,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAACC,WAAW,EAAE;IACxE,MAAMf,IAAI,GAAGa,cAAc,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;IAEhD,OAAOd,IAAI;EACb;;AAnDWtB,cAAc,C;mBAAdA,cAAc,EAAAsC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdzC,cAAc,C;SAAdA,cAAc;EAAA0C,OAAA,EAAd1C,cAAc,CAAA2C,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEP5C,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}