{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CategorieService {\n  constructor(http) {\n    this.http = http;\n    this.categoriesList = [];\n  }\n  getAllCategories() {\n    return this.http.get('https://diane.amorce.org/api/categories');\n  }\n  getParentById(id) {\n    const categories$ = this.getAllCategories();\n    return categories$.pipe(map(categories => categories.find(category => category.id === id && category.parentId === null)));\n  }\n}\nCategorieService.ɵfac = function CategorieService_Factory(t) {\n  return new (t || CategorieService)(i0.ɵɵinject(i1.HttpClient));\n};\nCategorieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategorieService,\n  factory: CategorieService.ɵfac,\n  providedIn: 'root'\n});\nexport { CategorieService };","map":{"version":3,"names":["map","CategorieService","constructor","http","categoriesList","getAllCategories","get","getParentById","id","categories$","pipe","categories","find","category","parentId","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Maddox\\Documents\\TRAVAIL\\AFPA_CDA_2023\\ANGULAR\\WitchyDesktop\\src\\app\\services\\categories.services.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Categories } from \"../models/categories.model\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class CategorieService {\r\n\r\n    constructor( private http: HttpClient){\r\n\r\n    }\r\n\r\n    categoriesList: Categories[] = [\r\n\r\n\r\n    ];\r\n\r\n    getAllCategories():Observable<Categories[]> {\r\n        return this.http.get<Categories[]>('https://diane.amorce.org/api/categories')\r\n    }\r\n\r\n    getParentById(id: number): Categories | null {\r\n        const categories$ = this.getAllCategories();\r\n        return categories$.pipe(\r\n            map(categories => categories.find(category => category.id === id && category.parentId === null))\r\n        );\r\n    }\r\n\r\n        \r\n\r\n    \r\n}"],"mappings":"AAIA,SAAiBA,GAAG,QAAQ,gBAAgB;;;AAE5C,MAIaC,gBAAgB;EAEzBC,YAAqBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAIzB,KAAAC,cAAc,GAAiB,EAG9B;EALD;EAOAC,gBAAgBA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAe,yCAAyC,CAAC;EACjF;EAEAC,aAAaA,CAACC,EAAU;IACpB,MAAMC,WAAW,GAAG,IAAI,CAACJ,gBAAgB,EAAE;IAC3C,OAAOI,WAAW,CAACC,IAAI,CACnBV,GAAG,CAACW,UAAU,IAAIA,UAAU,CAACC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACL,EAAE,KAAKA,EAAE,IAAIK,QAAQ,CAACC,QAAQ,KAAK,IAAI,CAAC,CAAC,CACnG;EACL;;AApBSb,gBAAgB,C;mBAAhBA,gBAAgB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBjB,gBAAgB,C;SAAhBA,gBAAgB;EAAAkB,OAAA,EAAhBlB,gBAAgB,CAAAmB,IAAA;EAAAC,UAAA,EAHb;AAAM;SAGTpB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}