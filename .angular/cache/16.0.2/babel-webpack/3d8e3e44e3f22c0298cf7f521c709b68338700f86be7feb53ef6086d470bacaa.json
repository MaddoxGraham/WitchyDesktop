{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CategorieService {\n  constructor(http) {\n    this.http = http;\n    this.categoriesList = [];\n  }\n  getAllCategories() {\n    return this.http.get('https://diane.amorce.org/api/categories');\n  }\n  getCategoriesParents() {\n    return this.http.get('https://diane.amorce.org/api/categories').pipe(map(categories => categories.filter(categories => categories.parentId === null)));\n  }\n  getCategorieById(id) {\n    const categorie = this.categoriesList.find(categorie => categorie.id === id);\n    if (!categorie) {\n      throw new Error('categorie not found');\n    }\n  }\n}\nCategorieService.ɵfac = function CategorieService_Factory(t) {\n  return new (t || CategorieService)(i0.ɵɵinject(i1.HttpClient));\n};\nCategorieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategorieService,\n  factory: CategorieService.ɵfac,\n  providedIn: 'root'\n});\nexport { CategorieService };","map":{"version":3,"names":["map","CategorieService","constructor","http","categoriesList","getAllCategories","get","getCategoriesParents","pipe","categories","filter","parentId","getCategorieById","id","categorie","find","Error","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/diane/Documents/PROJET/WitchyDesktop/src/app/services/categories.services.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Categories } from \"../models/categories.model\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { filter, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class CategorieService {\n\n    constructor( private http: HttpClient){\n\n    }\n\n    categoriesList: Categories[] = [\n\n\n    ];\n\n    getAllCategories():Observable<Categories[]> {\n        return this.http.get<Categories[]>('https://diane.amorce.org/api/categories')\n    }\n\n    getCategoriesParents(): Observable<Categories[]>{\n        return this.http.get<Categories[]>('https://diane.amorce.org/api/categories')\n    .pipe(\n      map(categories => categories.filter(categories => categories.parentId === null))\n    );\n    }\n\n    getCategorieById(id: number): void {\n        const categorie = this.categoriesList.find(categorie => categorie.id === id);\n        if (!categorie) {\n            throw new Error('categorie not found');\n        }\n\n    }\n}"],"mappings":"AAIA,SAAiBA,GAAG,QAAQ,gBAAgB;;;AAE5C,MAIaC,gBAAgB;EAEzBC,YAAqBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAIzB,KAAAC,cAAc,GAAiB,EAG9B;EALD;EAOAC,gBAAgBA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAe,yCAAyC,CAAC;EACjF;EAEAC,oBAAoBA,CAAA;IAChB,OAAO,IAAI,CAACJ,IAAI,CAACG,GAAG,CAAe,yCAAyC,CAAC,CAChFE,IAAI,CACHR,GAAG,CAACS,UAAU,IAAIA,UAAU,CAACC,MAAM,CAACD,UAAU,IAAIA,UAAU,CAACE,QAAQ,KAAK,IAAI,CAAC,CAAC,CACjF;EACD;EAEAC,gBAAgBA,CAACC,EAAU;IACvB,MAAMC,SAAS,GAAG,IAAI,CAACV,cAAc,CAACW,IAAI,CAACD,SAAS,IAAIA,SAAS,CAACD,EAAE,KAAKA,EAAE,CAAC;IAC5E,IAAI,CAACC,SAAS,EAAE;MACZ,MAAM,IAAIE,KAAK,CAAC,qBAAqB,CAAC;;EAG9C;;AA5BSf,gBAAgB,C;mBAAhBA,gBAAgB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBnB,gBAAgB,C;SAAhBA,gBAAgB;EAAAoB,OAAA,EAAhBpB,gBAAgB,CAAAqB,IAAA;EAAAC,UAAA,EAHb;AAAM;SAGTtB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}