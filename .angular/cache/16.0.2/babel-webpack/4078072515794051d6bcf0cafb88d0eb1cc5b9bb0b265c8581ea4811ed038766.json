{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CategorieService {\n  constructor(http) {\n    this.http = http;\n    this.categoriesList = [];\n    /********* Gestion de la sauvegarde de la sous categorie courante  */\n    this.CATEGORY_ID_KEY = 'currentCategoryId';\n  }\n  getAllCategories() {\n    return this.http.get('https://diane.amorce.org/api/categories');\n  }\n  getCategoriesParents() {\n    return this.http.get('https://diane.amorce.org/api/categories').pipe(map(categories => categories.filter(categories => categories.parentId === null)));\n  }\n  getCategorieById(id) {\n    const categorie = this.categoriesList.find(categorie => categorie.id === id);\n    if (!categorie) {\n      throw new Error('categorie not found');\n    }\n  }\n  // ...\n  setCurrentCategoryId(id) {\n    localStorage.setItem(this.CATEGORY_ID_KEY, id.toString());\n  }\n  getCurrentCategoryId() {\n    const categoryId = localStorage.getItem(this.CATEGORY_ID_KEY);\n    return categoryId ? parseInt(categoryId, 10) : null;\n  }\n  clearCurrentCategoryId() {\n    localStorage.removeItem(this.CATEGORY_ID_KEY);\n  }\n  setCurrentCategoryId(categoryId) {\n    this.currentCategoryId = categoryId;\n  }\n  getCurrentCategoryId() {\n    return this.currentCategoryId;\n  }\n}\nCategorieService.ɵfac = function CategorieService_Factory(t) {\n  return new (t || CategorieService)(i0.ɵɵinject(i1.HttpClient));\n};\nCategorieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategorieService,\n  factory: CategorieService.ɵfac,\n  providedIn: 'root'\n});\nexport { CategorieService };","map":{"version":3,"names":["map","CategorieService","constructor","http","categoriesList","CATEGORY_ID_KEY","getAllCategories","get","getCategoriesParents","pipe","categories","filter","parentId","getCategorieById","id","categorie","find","Error","setCurrentCategoryId","localStorage","setItem","toString","getCurrentCategoryId","categoryId","getItem","parseInt","clearCurrentCategoryId","removeItem","currentCategoryId","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Maddox\\Documents\\TRAVAIL\\AFPA_CDA_2023\\ANGULAR\\WitchyDesktop\\src\\app\\services\\categories.services.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Categories } from \"../models/categories.model\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class CategorieService {\r\n\r\n    constructor( private http: HttpClient){\r\n    }\r\n\r\n    currentCategoryId!: number | null;\r\n    categoriesList: Categories[] = [\r\n\r\n\r\n    ];\r\n\r\n    getAllCategories():Observable<Categories[]> {\r\n        return this.http.get<Categories[]>('https://diane.amorce.org/api/categories')\r\n    }\r\n\r\n    getCategoriesParents(): Observable<Categories[]>{\r\n        return this.http.get<Categories[]>('https://diane.amorce.org/api/categories')\r\n    .pipe(\r\n      map(categories => categories.filter(categories => categories.parentId === null))\r\n    );\r\n    }\r\n\r\n    getCategorieById(id: number): void {\r\n        const categorie = this.categoriesList.find(categorie => categorie.id === id);\r\n        if (!categorie) {\r\n            throw new Error('categorie not found');\r\n        }\r\n    }\r\n\r\n\r\n    /********* Gestion de la sauvegarde de la sous categorie courante  */  \r\n    private readonly CATEGORY_ID_KEY = 'currentCategoryId';\r\n\r\n  // ...\r\n\r\n  setCurrentCategoryId(id: number): void {\r\n    localStorage.setItem(this.CATEGORY_ID_KEY, id.toString());\r\n  }\r\n\r\n  getCurrentCategoryId(): number | null {\r\n    const categoryId = localStorage.getItem(this.CATEGORY_ID_KEY);\r\n    return categoryId ? parseInt(categoryId, 10) : null;\r\n  }\r\n\r\n  clearCurrentCategoryId(): void {\r\n    localStorage.removeItem(this.CATEGORY_ID_KEY);\r\n  }\r\n\r\n\r\n    setCurrentCategoryId(categoryId: number): void {\r\n\r\n        this.currentCategoryId = categoryId;\r\n      }\r\n    \r\n      getCurrentCategoryId(): number | null {\r\n        return this.currentCategoryId;\r\n      }\r\n\r\n}"],"mappings":"AAIA,SAAiBA,GAAG,QAAQ,gBAAgB;;;AAE5C,MAIaC,gBAAgB;EAEzBC,YAAqBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAIzB,KAAAC,cAAc,GAAiB,EAG9B;IAqBD;IACiB,KAAAC,eAAe,GAAG,mBAAmB;EA5BtD;EAQAC,gBAAgBA,CAAA;IACZ,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAe,yCAAyC,CAAC;EACjF;EAEAC,oBAAoBA,CAAA;IAChB,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAe,yCAAyC,CAAC,CAChFE,IAAI,CACHT,GAAG,CAACU,UAAU,IAAIA,UAAU,CAACC,MAAM,CAACD,UAAU,IAAIA,UAAU,CAACE,QAAQ,KAAK,IAAI,CAAC,CAAC,CACjF;EACD;EAEAC,gBAAgBA,CAACC,EAAU;IACvB,MAAMC,SAAS,GAAG,IAAI,CAACX,cAAc,CAACY,IAAI,CAACD,SAAS,IAAIA,SAAS,CAACD,EAAE,KAAKA,EAAE,CAAC;IAC5E,IAAI,CAACC,SAAS,EAAE;MACZ,MAAM,IAAIE,KAAK,CAAC,qBAAqB,CAAC;;EAE9C;EAMF;EAEAC,oBAAoBA,CAACJ,EAAU;IAC7BK,YAAY,CAACC,OAAO,CAAC,IAAI,CAACf,eAAe,EAAES,EAAE,CAACO,QAAQ,EAAE,CAAC;EAC3D;EAEAC,oBAAoBA,CAAA;IAClB,MAAMC,UAAU,GAAGJ,YAAY,CAACK,OAAO,CAAC,IAAI,CAACnB,eAAe,CAAC;IAC7D,OAAOkB,UAAU,GAAGE,QAAQ,CAACF,UAAU,EAAE,EAAE,CAAC,GAAG,IAAI;EACrD;EAEAG,sBAAsBA,CAAA;IACpBP,YAAY,CAACQ,UAAU,CAAC,IAAI,CAACtB,eAAe,CAAC;EAC/C;EAGEa,oBAAoBA,CAACK,UAAkB;IAEnC,IAAI,CAACK,iBAAiB,GAAGL,UAAU;EACrC;EAEAD,oBAAoBA,CAAA;IAClB,OAAO,IAAI,CAACM,iBAAiB;EAC/B;;AAxDO3B,gBAAgB,C;mBAAhBA,gBAAgB,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhB/B,gBAAgB,C;SAAhBA,gBAAgB;EAAAgC,OAAA,EAAhBhC,gBAAgB,CAAAiC,IAAA;EAAAC,UAAA,EAHb;AAAM;SAGTlC,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}