{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProduitService {\n  constructor(http) {\n    this.http = http;\n    this.produitsList = [];\n  }\n  getAllProduits() {\n    return this.http.get('https://diane.amorce.org/api/produits');\n  }\n  getAllPhotoByRef(ref) {\n    const url = `https://diane.amorce.org/api/photos?RefProduit=${ref}`;\n    return this.http.get(url);\n  }\n  getProduitById(id) {\n    const url = `https://diane.amorce.org/api/produits?id=${id}`;\n    return this.http.get(url);\n  }\n  createProduit(formData) {\n    const url = 'https://diane.amorce.org/api/produits';\n    const productInfos = [];\n    productInfos.push(formData.ShortLibel);\n    productInfos.push(formData.LongLibel);\n    productInfos.push(formData.prxHt);\n    console.log(productInfos);\n  }\n  slugify(text) {\n    const normalizedText = text.replace(/[^a-zA-Z0-9\\s]/g, \"\").toLowerCase();\n    const slug = normalizedText.replace(/\\s+/g, \"-\");\n    return slug;\n  }\n}\nProduitService.ɵfac = function ProduitService_Factory(t) {\n  return new (t || ProduitService)(i0.ɵɵinject(i1.HttpClient));\n};\nProduitService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProduitService,\n  factory: ProduitService.ɵfac,\n  providedIn: 'root'\n});\nexport { ProduitService };","map":{"version":3,"names":["ProduitService","constructor","http","produitsList","getAllProduits","get","getAllPhotoByRef","ref","url","getProduitById","id","createProduit","formData","productInfos","push","ShortLibel","LongLibel","prxHt","console","log","slugify","text","normalizedText","replace","toLowerCase","slug","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Maddox\\Documents\\TRAVAIL\\AFPA_CDA_2023\\ANGULAR\\WitchyDesktop\\src\\app\\services\\produits.services.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable, forkJoin, map } from \"rxjs\";\r\nimport { Produits } from \"../models/produits.model\";\r\nimport { Photos } from \"../models/photos.model\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ProduitService {\r\n\r\n    constructor( private http: HttpClient){\r\n\r\n    }\r\n\r\n    produitsList: Produits[] = [\r\n    ];\r\n\r\n    getAllProduits():Observable<Produits[]> {\r\n        return this.http.get<Produits[]>('https://diane.amorce.org/api/produits')\r\n    }\r\n\r\n    getAllPhotoByRef(ref: number): Observable<Photos[]>{\r\n        const url = `https://diane.amorce.org/api/photos?RefProduit=${ref}`;\r\n        return this.http.get<Photos[]>(url);\r\n    }\r\n\r\n    getProduitById(id:number): Observable<Produits[]>{\r\n        const url= `https://diane.amorce.org/api/produits?id=${id}`;\r\n        return this.http.get<Produits[]>(url);\r\n    }\r\n\r\n    createProduit(formData:any): void{\r\n        const url = 'https://diane.amorce.org/api/produits';\r\n        const productInfos = [];\r\n        productInfos.push(formData.ShortLibel)\r\n        productInfos.push(formData.LongLibel)\r\n        productInfos.push(formData.prxHt)\r\n        console.log(productInfos);\r\n\r\n    }\r\n\r\n    \r\n    slugify(text: string): string {\r\n\r\n        const normalizedText = text.replace(/[^a-zA-Z0-9\\s]/g, \"\").toLowerCase();\r\n        const slug = normalizedText.replace(/\\s+/g, \"-\");\r\n      \r\n        return slug;\r\n      }\r\n      \r\n      \r\n} "],"mappings":";;AAMA,MAIaA,cAAc;EAEvBC,YAAqBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAIzB,KAAAC,YAAY,GAAe,EAC1B;EAHD;EAKAC,cAAcA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,uCAAuC,CAAC;EAC7E;EAEAC,gBAAgBA,CAACC,GAAW;IACxB,MAAMC,GAAG,GAAG,kDAAkDD,GAAG,EAAE;IACnE,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAWG,GAAG,CAAC;EACvC;EAEAC,cAAcA,CAACC,EAAS;IACpB,MAAMF,GAAG,GAAE,4CAA4CE,EAAE,EAAE;IAC3D,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAaG,GAAG,CAAC;EACzC;EAEAG,aAAaA,CAACC,QAAY;IACtB,MAAMJ,GAAG,GAAG,uCAAuC;IACnD,MAAMK,YAAY,GAAG,EAAE;IACvBA,YAAY,CAACC,IAAI,CAACF,QAAQ,CAACG,UAAU,CAAC;IACtCF,YAAY,CAACC,IAAI,CAACF,QAAQ,CAACI,SAAS,CAAC;IACrCH,YAAY,CAACC,IAAI,CAACF,QAAQ,CAACK,KAAK,CAAC;IACjCC,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC;EAE7B;EAGAO,OAAOA,CAACC,IAAY;IAEhB,MAAMC,cAAc,GAAGD,IAAI,CAACE,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAACC,WAAW,EAAE;IACxE,MAAMC,IAAI,GAAGH,cAAc,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;IAEhD,OAAOE,IAAI;EACb;;AAxCOzB,cAAc,C;mBAAdA,cAAc,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAd7B,cAAc,C;SAAdA,cAAc;EAAA8B,OAAA,EAAd9B,cAAc,CAAA+B,IAAA;EAAAC,UAAA,EAHX;AAAM;SAGThC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}