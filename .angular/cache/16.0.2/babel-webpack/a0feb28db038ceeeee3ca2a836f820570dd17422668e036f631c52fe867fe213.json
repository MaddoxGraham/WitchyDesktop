{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CategorieService {\n  constructor(http) {\n    this.http = http;\n    this.categoriesList = [{\n      id: 1,\n      parentId: null,\n      nomination: 'Women',\n      slug: 'women'\n    }, {\n      id: 2,\n      parentId: null,\n      nomination: 'Men',\n      slug: 'men'\n    }, {\n      id: 3,\n      parentId: null,\n      nomination: 'Shoes',\n      slug: 'shoes'\n    }];\n  }\n  getAllCategories() {\n    return this.http.get('https://diane.amorce.org/api/categories');\n  }\n  getParentCategories() {\n    $categories = this.getAllCategories();\n  }\n  getCategorieById(id) {\n    const categorie = this.categoriesList.find(categorie => categorie.id === id);\n    if (!categorie) {\n      throw new Error('categorie not found');\n    }\n  }\n}\nCategorieService.ɵfac = function CategorieService_Factory(t) {\n  return new (t || CategorieService)(i0.ɵɵinject(i1.HttpClient));\n};\nCategorieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategorieService,\n  factory: CategorieService.ɵfac,\n  providedIn: 'root'\n});\nexport { CategorieService };","map":{"version":3,"names":["CategorieService","constructor","http","categoriesList","id","parentId","nomination","slug","getAllCategories","get","getParentCategories","$categories","getCategorieById","categorie","find","Error","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/diane/Documents/PROJET/WitchyDesktop/src/app/services/categories.services.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Categories } from \"../models/categories.model\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class CategorieService {\n\n    constructor( private http: HttpClient){\n\n    }\n\n    categoriesList: Categories[] = [\n        {\n            id: 1,\n            parentId: null,\n            nomination: 'Women',\n            slug: 'women'\n        }, {\n            id: 2,\n            parentId: null,\n            nomination: 'Men',\n            slug: 'men'\n        }, {\n            id: 3,\n            parentId: null,\n            nomination: 'Shoes',\n            slug: 'shoes'\n        }\n\n    ];\n\n    getAllCategories():Observable<Categories[]> {\n        return this.http.get<Categories[]>('https://diane.amorce.org/api/categories')\n    }\n\n    getParentCategories(): Observable<Categories[]>{\n        $categories = this.getAllCategories();\n        \n    }\n\n    getCategorieById(id: number): void {\n        const categorie = this.categoriesList.find(categorie => categorie.id === id);\n        if (!categorie) {\n            throw new Error('categorie not found');\n        }\n\n    }\n}"],"mappings":";;AAKA,MAIaA,gBAAgB;EAEzBC,YAAqBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAIzB,KAAAC,cAAc,GAAiB,CAC3B;MACIC,EAAE,EAAE,CAAC;MACLC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,OAAO;MACnBC,IAAI,EAAE;KACT,EAAE;MACCH,EAAE,EAAE,CAAC;MACLC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,KAAK;MACjBC,IAAI,EAAE;KACT,EAAE;MACCH,EAAE,EAAE,CAAC;MACLC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,OAAO;MACnBC,IAAI,EAAE;KACT,CAEJ;EApBD;EAsBAC,gBAAgBA,CAAA;IACZ,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAe,yCAAyC,CAAC;EACjF;EAEAC,mBAAmBA,CAAA;IACfC,WAAW,GAAG,IAAI,CAACH,gBAAgB,EAAE;EAEzC;EAEAI,gBAAgBA,CAACR,EAAU;IACvB,MAAMS,SAAS,GAAG,IAAI,CAACV,cAAc,CAACW,IAAI,CAACD,SAAS,IAAIA,SAAS,CAACT,EAAE,KAAKA,EAAE,CAAC;IAC5E,IAAI,CAACS,SAAS,EAAE;MACZ,MAAM,IAAIE,KAAK,CAAC,qBAAqB,CAAC;;EAG9C;;AAzCSf,gBAAgB,C;mBAAhBA,gBAAgB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBnB,gBAAgB,C;SAAhBA,gBAAgB;EAAAoB,OAAA,EAAhBpB,gBAAgB,CAAAqB,IAAA;EAAAC,UAAA,EAHb;AAAM;SAGTtB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}