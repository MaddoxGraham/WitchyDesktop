{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CategorieService {\n  constructor(http) {\n    this.http = http;\n    this.categoriesList = [];\n  }\n  getAllCategories() {\n    return this.http.get('https://diane.amorce.org/api/categories');\n  }\n  // getCategoriesParents(): Observable<Categories[]>{\n  //     return this.http.get<Categories[]>('https://diane.amorce.org/api/categories')\n  // .pipe(\n  //   map(categories => categories.filter(categories => categories.parentId === null))\n  // );\n  // }\n  getCategorieById(id) {\n    const categorie = this.categoriesList.find(categorie => categorie.id === id);\n    if (!categorie) {\n      throw new Error('categorie not found');\n    }\n  }\n}\nCategorieService.ɵfac = function CategorieService_Factory(t) {\n  return new (t || CategorieService)(i0.ɵɵinject(i1.HttpClient));\n};\nCategorieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategorieService,\n  factory: CategorieService.ɵfac,\n  providedIn: 'root'\n});\nexport { CategorieService };","map":{"version":3,"names":["CategorieService","constructor","http","categoriesList","getAllCategories","get","getCategorieById","id","categorie","find","Error","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Maddox\\Documents\\TRAVAIL\\AFPA_CDA_2023\\ANGULAR\\WitchyDesktop\\src\\app\\services\\categories.services.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Categories } from \"../models/categories.model\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class CategorieService {\r\n\r\n    constructor( private http: HttpClient){\r\n\r\n    }\r\n\r\n    categoriesList: Categories[] = [\r\n\r\n\r\n    ];\r\n\r\n    getAllCategories():Observable<Categories[]> {\r\n        return this.http.get<Categories[]>('https://diane.amorce.org/api/categories')\r\n    }\r\n\r\n    // getCategoriesParents(): Observable<Categories[]>{\r\n    //     return this.http.get<Categories[]>('https://diane.amorce.org/api/categories')\r\n    // .pipe(\r\n    //   map(categories => categories.filter(categories => categories.parentId === null))\r\n    // );\r\n    // }\r\n\r\n\r\n    \r\n\r\n    getCategorieById(id: number): void {\r\n        const categorie = this.categoriesList.find(categorie => categorie.id === id);\r\n        if (!categorie) {\r\n            throw new Error('categorie not found');\r\n        }\r\n\r\n        \r\n\r\n    }\r\n}"],"mappings":";;AAMA,MAIaA,gBAAgB;EAEzBC,YAAqBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAIzB,KAAAC,cAAc,GAAiB,EAG9B;EALD;EAOAC,gBAAgBA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAe,yCAAyC,CAAC;EACjF;EAEA;EACA;EACA;EACA;EACA;EACA;EAKAC,gBAAgBA,CAACC,EAAU;IACvB,MAAMC,SAAS,GAAG,IAAI,CAACL,cAAc,CAACM,IAAI,CAACD,SAAS,IAAIA,SAAS,CAACD,EAAE,KAAKA,EAAE,CAAC;IAC5E,IAAI,CAACC,SAAS,EAAE;MACZ,MAAM,IAAIE,KAAK,CAAC,qBAAqB,CAAC;;EAK9C;;AAjCSV,gBAAgB,C;mBAAhBA,gBAAgB,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBd,gBAAgB,C;SAAhBA,gBAAgB;EAAAe,OAAA,EAAhBf,gBAAgB,CAAAgB,IAAA;EAAAC,UAAA,EAHb;AAAM;SAGTjB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}