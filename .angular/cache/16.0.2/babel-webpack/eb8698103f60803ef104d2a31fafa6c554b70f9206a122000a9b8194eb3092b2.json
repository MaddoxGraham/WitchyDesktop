{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CategorieService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllCategories() {\n    return this.http.get('https://diane.amorce.org/api/categories').pipe(map(categories => {\n      categories.forEach(category => {\n        categorie.subCategories = this.getSubCategories(category.id, categories);\n      });\n      return categories.filter(category => category.parentId === null);\n    }));\n  }\n  getSubCategories(parentId, categories) {\n    return this.http.get('https://diane.amorce.org/api/categories').pipe(map(allCategories => {\n      return allCategories.filter(category => category.parentId === parentId);\n    }));\n  }\n}\nCategorieService.ɵfac = function CategorieService_Factory(t) {\n  return new (t || CategorieService)(i0.ɵɵinject(i1.HttpClient));\n};\nCategorieService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategorieService,\n  factory: CategorieService.ɵfac,\n  providedIn: 'root'\n});\nexport { CategorieService };","map":{"version":3,"names":["map","CategorieService","constructor","http","getAllCategories","get","pipe","categories","forEach","category","categorie","subCategories","getSubCategories","id","filter","parentId","allCategories","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Maddox\\Documents\\TRAVAIL\\AFPA_CDA_2023\\ANGULAR\\WitchyDesktop\\src\\app\\services\\categories.services.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Categories } from \"../models/categories.model\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class CategorieService {\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    getAllCategories(): Observable<Categories[]> {\r\n        return this.http.get<Categories[]>('https://diane.amorce.org/api/categories').pipe(\r\n            map((categories: Categories[]) => {\r\n                categories.forEach(category => {\r\n                    categorie.subCategories = this.getSubCategories(category.id, categories);\r\n                });\r\n                return categories.filter(category => category.parentId === null);\r\n            })\r\n        );\r\n    }\r\n\r\n    getSubCategories(parentId: number, categories: Categories[]): Observable<Categories[]> {\r\n        return this.http.get<Categories[]>('https://diane.amorce.org/api/categories').pipe(\r\n            map((allCategories: Categories[]) => {\r\n                return allCategories.filter(category => category.parentId === parentId);\r\n            })\r\n        );\r\n    }\r\n}"],"mappings":"AAIA,SAAiBA,GAAG,QAAQ,gBAAgB;;;AAE5C,MAIaC,gBAAgB;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,gBAAgBA,CAAA;IACZ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAe,yCAAyC,CAAC,CAACC,IAAI,CAC9EN,GAAG,CAAEO,UAAwB,IAAI;MAC7BA,UAAU,CAACC,OAAO,CAACC,QAAQ,IAAG;QAC1BC,SAAS,CAACC,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAACH,QAAQ,CAACI,EAAE,EAAEN,UAAU,CAAC;MAC5E,CAAC,CAAC;MACF,OAAOA,UAAU,CAACO,MAAM,CAACL,QAAQ,IAAIA,QAAQ,CAACM,QAAQ,KAAK,IAAI,CAAC;IACpE,CAAC,CAAC,CACL;EACL;EAEAH,gBAAgBA,CAACG,QAAgB,EAAER,UAAwB;IACvD,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAe,yCAAyC,CAAC,CAACC,IAAI,CAC9EN,GAAG,CAAEgB,aAA2B,IAAI;MAChC,OAAOA,aAAa,CAACF,MAAM,CAACL,QAAQ,IAAIA,QAAQ,CAACM,QAAQ,KAAKA,QAAQ,CAAC;IAC3E,CAAC,CAAC,CACL;EACL;;AArBSd,gBAAgB,C;mBAAhBA,gBAAgB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBnB,gBAAgB,C;SAAhBA,gBAAgB;EAAAoB,OAAA,EAAhBpB,gBAAgB,CAAAqB,IAAA;EAAAC,UAAA,EAHb;AAAM;SAGTtB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}